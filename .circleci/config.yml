# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies

      - run:
          name: install dependencies
          command: | 
            ls $HOME
            if [ ! -d "${HOME}/conda" ]; then
                wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
                sudo apt-get update && sudo apt-get install -y jq
                /bin/bash Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/conda
                export PATH=$HOME/conda/bin:$PATH
                $HOME/conda/bin/pip install sregistry[all]
            else
                echo "Miniconda is already installed, continuing to build."
            fi
            chmod u+x ~/repo/.circleci/*.sh
            /bin/bash ~/repo/.circleci/setup.sh

      - save_cache:
          paths:
            - $HOME/conda
            - /usr/local
          key: v1-dependencies
        
      - run:
          name: Build Containers
          command: |
            cd ~/repo
            mkdir -p build
            # 0. Keep lists of tags, hashes, and storage paths
            tags=""
            digests=""
            paths=""
            urls=""
            # The repository ID is in the inspect / metadata
            # <meta name="octolytics-dimension-repository_id" content="167740989" />
            # repo_id=167740989
            repo_id=$(curl https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME} | jq --raw-output '.id')
            echo "Repo ID is ${repo_id}"
            artifacts="https://${CIRCLE_BUILD_NUM}-${repo_id}-gh.circle-artifacts.com"
            # Here is a list of commits, compared to master
            commits=$(git log --format=%H origin/master..origin/${CIRCLE_BRANCH})
            changed=$(tempfile) 
            for commit in $commits
                do
                    git diff --name-only master $commit >> ${changed}
            done
            changed_recipes=$(cat $changed | grep Singularity | sort | uniq)
            # 1. Find changed files between branch and master
            for recipe in ${changed_recipes}
                do  
                    echo "Found changed recipe $recipe"
                    /bin/bash ~/repo/.circleci/build.sh $recipe
                    # Rename image based on shasum
                    container_name=`sha256sum ${recipe}.sif | awk '{ print $1 }'`
                    container_dir=$(dirname ${recipe}.sif)
                    container_tag=$(basename $container_dir)
                    mv ${recipe}.sif ${container_dir}/${container_name}.sif
                    # Create artifact storage that mirrors registry organization
                    outdir=build/"${container_dir/${HOME}\/repo/}"
                    outdir="${outdir/manifests\//}"  # vanessa/greeting/latest
                    mkdir -p $outdir

                    echo
                    echo "Successfully built ${recipe}"
                    echo "   saving to -> $outdir"
                    echo "   sha256sum -> $container_name"
                    echo "   tag       -> $container_tag"
 
                    mv "${container_dir}/${container_name}.sif" $outdir
                    tags="${tags}${container_tag} "
                    digests="${digests}sha256:${container_name} "
                    paths="$paths${outdir}/${container_name}.sif "
                    url=${artifacts}/$CIRCLE_NODE_INDEX/singularity-containers/$outdir/$container_name.sif
                    urls="$urls$url "
                done
             
            echo $tags
            echo $digests
            echo $paths
            echo $urls

      # build the container!
      # You can add any other sregistry push commands here, and specify a client
      # (and make sure your define the encrypted environment credentials in circle ci
      # to push to your storage locations of choice

      # Examples with upload to storage clients defined by sregistry
      # https://singularityhub.github.io/sregistry-cli/clients
      # Environment variables must be defined in CI encrypted secrets/settings
      # https://circleci.com/docs/2.0/env-vars/
      #- /bin/bash build.sh --uri collection/container --cli google-storage Singularity
      #- /bin/bash build.sh --uri collection/container --cli google-drive Singularity
      #- /bin/bash build.sh --uri collection/container --cli globus Singularity
      #- /bin/bash build.sh --uri collection/container --cli registry Singularity

      - store_artifacts:
          path: ~/repo/build
          destination: singularity-containers
